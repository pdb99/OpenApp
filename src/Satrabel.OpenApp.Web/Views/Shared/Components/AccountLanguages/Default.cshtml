@using System.Text.Encodings.Web
@using Satrabel.OpenApp.Web.Views.Shared.Components.AccountLanguages
@using Satrabel.OpenApp.Web.Resources
@model LanguageSelectionViewModel
@inject IWebResourceManager WebResourceManager
@{
    WebResourceManager.AddScript(ApplicationPath + "Views/Shared/Components/AccountLanguages/Default.js");
}

@if (Model.Languages.Count > 1)
{
    @*
        <div class="language-switch-area">
            @foreach (var languageInfo in Model.Languages)
            {
                <a href="~/AbpLocalization/ChangeCulture?cultureName=@(languageInfo.Name)&returnUrl=@(UrlEncoder.Default.Encode(Context.Request.Path + Context.Request.QueryString))">
                    <span class="language-icon @(languageInfo == Model.CurrentLanguage ? "language-icon-current" : "")" title="@languageInfo.DisplayName"><i class="@languageInfo.Icon"></i></span>
                </a>
            }
        </div>
    *@
    <li class="nav-item d-md-down-none">

    </li>
    <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle nav-link" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
            <span class="d-md-down-none"><i class="icon-globe"></i> @Model.CurrentLanguage.DisplayName</span>
        </a>
        <div class="dropdown-menu dropdown-menu-right dropdown-languages">
            @foreach (var languageInfo in Model.Languages)
            {
                <a class="dropdown-item" href="~/AbpLocalization/ChangeCulture?cultureName=@(languageInfo.Name)&returnUrl=@(UrlEncoder.Default.Encode(Context.Request.Path + Context.Request.QueryString))"> @languageInfo.DisplayName</a>
            }
        </div>
    </li>

}